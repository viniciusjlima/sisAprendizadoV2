@model Aprendizado.Entity.Pergunta

@{
    ViewBag.Title = "Edit";
}


<div id="page-wrapper">
    <div id="page-inner">
        <div class="row">
            <div class="col-md-12">
                <h1 class="page-header">Gerenciamento de Perguntas<small> - @ViewBag.Titulo - </small>
                </h1>
            </div>
        </div>
        <!-- /. ROW  -->
        @using (Html.BeginForm())
        {
            <!-- /. ROW  -->
            
            @Html.HiddenFor(model => model.idPergunta)
        
            <div class="form-group">
                @Html.LabelFor(model => model.Tema, new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.DropDownList("idTema", null, new { @class = "form-control" })
                </div>
            </div>
            <br />
            <br />
            <br />

            <div class="form-group">
                @Html.LabelFor(model => model.NivelDificuldade, new { @class = "control-label col-md-2" })
                
                <div class="col-md-3">
                    @Html.DropDownList("idNivelDificuldade", null, new { @class = "form-control" })
                </div>
            </div>
            <br />
            <br />
            <div class="form-group">
                @Html.LabelFor(model => model.Identificacao, new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.Identificacao, new { @class = "form-control" })
                </div>
            </div>
            <br />
            <br />
            <div class="form-group">
                @Html.LabelFor(model => model.Titulo, new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.Titulo, new { @class = "form-control" })
                </div>
            </div>
            <br />
            <br />
            <div class="form-group">
                @Html.LabelFor(model => model.Enunciado, new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.Enunciado, new { @class = "form-control" })
                </div>
            </div>

            <br />
            <br />
            
            if (Model.idPergunta != 0)
            {
                <div class="form-group">
	                @Html.LabelFor(model => model.Correta, new { @class = "control-label col-md-2" })
                    <div class="col-md-3">
                        @Html.DropDownList("Correta", null, new { @class = "form-control" })
                    </div>
                </div>
            
                
            }
            
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <br />
                    <input type="button" class="btn btn-default" value="Voltar" onclick="    history.go(-1)">
                    <input type="submit" value="Salvar" class="btn btn-default" onclick="    return validar();" />
                </div>
            </div>
        }
    </div>
</div>



@*@using (Html.BeginForm())
{
    <div class="form-horizontal">
        <h4>Editar Perguntaa</h4>
        <hr />

        @Html.HiddenFor(model => model.idPergunta)
        
       <div class="form-group">
	        @Html.LabelFor(model => model.Tema, new { @class = "control-label col-md-2" })
	        <div class="col-md-10">
		        @Html.DropDownList("idTema", "Selecione uma turma")
            </div>
        </div>



        <div class="form-group">
	        @Html.LabelFor(model => model.NivelDificuldade, new { @class = "control-label col-md-2" })
	        <div class="col-md-10">
		        @Html.DropDownList("idNivelDificuldade", "Selecione uma turma")
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Identificacao, new { @class = "control-label col-md-2" })
            <div class="col-md-3">
    	        @Html.TextBoxFor(model => model.Identificacao, new { @class = "form-control" })
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.Titulo, new { @class = "control-label col-md-2" })
            <div class="col-md-3">
    	        @Html.TextBoxFor(model => model.Titulo, new { @class = "form-control" })
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.Enunciado, new { @class = "control-label col-md-2" })
            <div class="col-md-3">
    	        @Html.TextBoxFor(model => model.Enunciado, new { @class = "form-control" })
            </div>
        </div>

        @if (Model.idPergunta != 0)
        {
            <div class="form-group">
	        @Html.LabelFor(model => model.Correta, new { @class = "control-label col-md-2" })
	        <div class="col-md-10">
		        @Html.DropDownList("Correta", "Selecione uma alternativa correta")
            </div>
        </div>
        }
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
            <br />   
            <input type="button"  class="btn btn-default" value="Voltar" onClick="    history.go(-1)">  
            <input type="submit" value="Salvar"  class="btn btn-default" onclick="    return validar();"/> 
          </div>
        </div>
    </div>
}*@

<div>

    @if (Model.idPergunta != 0)
    {
        @Html.ActionLink("Alternativas da Pergunta", "ListaAlternativas", new { idPergunta = Model.idPergunta })
    }
</div>


@if (ViewBag.Erro != null && ViewBag.Erro != "")
{
    <script>
        alert('@ViewBag.Erro');
    </script>
}

<script>
    function validar() {


        return true;
    }
</script>
